{"226986420":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/226986420/","description":"<p>En esta ocasión tenemos la suerte de contar con Alberto Cortés, que nos hablará de sus experiencias sobre Diff/Blame y cómo están construyendo su propia versión en Go</p> <p>Diff es una algoritmo venerable, desarrollado en 1970 para Unix; básicamente es una distancia de Levenshtein, pero orientado a líneas en vez de a carácter. Git-blame utiliza diff de una forma bastante interesante para detectar qué commit fue el último en modificar cada línea de un fichero.</p> <p><br/>Durante la charla se revisarán como funcionan ambos algoritmos, diff y blame, de una forma intuitiva y Alberto nos hablará de los papers y recursos que ha utilizado para llevar a cabo su desarrollo.</p> <p>Referencias de algunos de los papers utilizados:</p> <p><a href=\"http://www.xmailserver.org/diff2.pdf\">Myers, 1986, \"An O(ND) Difference Algorithm and Its Variations\"</a> </p> <p><br/><a href=\"https://users.soe.ucsc.edu/~ejw/papers/MSR26s-zimmermann.pdf\">Zimmerman, 2006, \"Mining Version Archives for Co-changed Lines\"</a></p> <p>\n\n\n\n¡IMPORTANTE!: A las oficinas de ShuttleCloud se entra por la puerta del garaje, no del portal :D</p> ","photos":[],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":3600000,"time":1449079200000,"title":"Diff and Blame: an intuitive overview"},"227538205":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/227538205/","description":"<p>We will talk about the paper \"Path, Trees and Flowers\" by Jack Edmonds.</p> <p>This paper is seminal in graph theory. It describes the maximum matchings blossom algorithm, which finds a decomposition of a graph in the maximum number of pairs connected by an edge.</p> <p>It is also the base of the famous minimum weight maximum matchings algorithm, a very important algorithm used in many applications, from pairing in chess tournaments to resources or worker placement within companies.</p> ","photos":[],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":3600000,"time":1453312800000,"title":"Path, Trees and Flowers"},"228560302":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/228560302/","description":"<p>The main problem when automatically analysing source code is finding a meaningful representation that captures the specific properties of programming languages. While there are widely adopted techniques for building “word embeddings” for natural language (like Word2vec), these are not applicable to source code, whose syntax and vocabulary are simpler .</p> <p>This paper presents a model for learning “code embeddings”, relying on the syntactic structure of the code, expressed as Abstract Syntax Trees, and how to use those embeddings for code classification tasks.</p> <p>Paper is available here: <a href=\"http://arxiv.org/abs/1409.3358\" class=\"linkified\">http://arxiv.org/abs/1409.3358</a></p> <p>Talk will be in english</p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/2/d/d/0/600_446771728.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/2/d/d/3/600_446771731.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/2/d/d/7/600_446771735.jpeg","height":null,"width":null}],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":3600000,"time":1455127200000,"title":"Building Program Vector Representations for Deep Learning"},"238583892":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/238583892/","description":"<p>Patricia G. Selinger, Morton M. Astrahan, Donald D. Chamberlin, Raymond A. Lorie, Thomas G. Price. [Access path selection in a relational database management system. SIGMOD, 1979.](<a href=\"https://t.co/KsfkS4evlM\" class=\"linkified\">https://t.co/KsfkS4evlM</a>)</p> <p>Databases are one of the backbones of our applications, we use them daily but  probably we didn't stop to analyze how things works under the hood. We take  for granted that given some declarative query (i.e with SQL), the RDBMS will try to be as efficient as possible. This enables data-independent query processing,  back in the day with systems like [IMS](<a href=\"https://t.co/jm3sxobbup\" class=\"linkified\">https://t.co/jm3sxobbup</a>)  queries were done using low level information, so knowledge about the underlying data structures was needed to be able to perform efficient queries. The presented paper is the foundation for query optimization field, it decomposes the problem into three distinct subproblems:</p> <p>- Cost estimation<br/>- Relational equivalences<br/>- Cost-based search</p> <p>We'll explore how solving those sub-problems databases are able to calculate \"good-enough\" query plans.</p> ","photos":[],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":7200000,"time":1490893200000,"title":"Access path selection in a relational database management system"},"233680763":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/233680763/","description":"<p>Causality is an essential component of how we make sense of the physical world, and of our relations to other humans. If I put a cup on the table, and look back at it, I expect it to be there. I also expect to get a reply to my postcards, after I send them, and not before.  </p> <p>These days hardly any service can claim not to have some form of distributed algorithm at its core. In a distributed scenario, if we are not careful, it is very easy to break the causal sense of things. In a key-value store my writes can be directed to a replica, and my subsequent reads served from an outdated one --- my cup might not be there when I look back. Message dissemination middleware might not always provide the ordering I expect --- I might receive some replies, before their leading questions. </p> <p>Luckily, most of these problems were already there 30 years ago, although in a much smaller scale, and lots of techniques have been developed to keep track of causality and make sense of the complex interactions in modern systems. However developers often look at techniques such as as replica synchronization with version vectors, or causal broadcasting algorithms, as black boxes; or as complex sets of rules that have to be followed and not questioned. </p> <p>This talk will focus on bringing back the intuition on causality, and show that keeping in mind some simple concepts, allows to understand how version vectors and vector clocks work, and were they differ, and how to use more sophisticated mechanisms to handle millions of concurrent clients in modern distributed data stores. </p> ","photos":[],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":7200000,"time":1473872400000,"title":"Causality is simple"},"230806223":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/230806223/","description":"<p>We're really glad to have Christopher Meiklejohn (<a href=\"https://twitter.com/cmeik)\"><a href=\"https://twitter.com/cmeik\" class=\"linkified\">https://twitter.com/cmeik</a>)</a> with us.</p> <p><br/>Chris will be talking about <b>HyParView:  a membership protocol for reliable gossip-based broadcast</b></p> <p><i>Gossip, or epidemic, protocols have emerged as a powerful strategy to implement highly scalable and resilient reliable broadcast primitives. Due to scalability reasons, each participant in a gossip protocol maintains a partial view of the system. The reliability of the gossip protocol depends upon some critical properties of these views, such as degree distribution and clustering coefficient.Several algorithms have been proposed to maintain partial views for gossip protocols. In this paper, we show that under a high number of faults, these algorithms take a long time to restore the desirable view properties. To address this problem, we present HyParView, a new membership protocol to support gossip-based broadcast that ensures high levels of reliability even in the presence of high rates of node failure. The HyParView protocol is based on a novel approach that relies in the use of two distinct partial views, which are maintained with different goals by different strategies.</i></p> <p><br/>You can read the full paper here: <a href=\"http://asc.di.fct.unl.pt/~jleitao/pdf/dsn07-leitao.pdf\"><a href=\"http://asc.di.fct.unl.pt/~jleitao/pdf/dsn07-leitao.pdf\" class=\"linkified\">http://asc.di.fct.unl.pt/~jleitao/pdf/dsn07-leitao.pdf</a></a></p> <p>Are you gonna miss it?</p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/3/8/c/2/600_449894530.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/3/8/c/3/600_449894531.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/3/8/c/4/600_449894532.jpeg","height":null,"width":null}],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":7200000,"time":1462986000000,"title":"HyParView: a membership protocol for reliable gossip-based broadcast"},"219836948":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/219836948/","description":"<p>Tenemos el enorme placer de contar con Álvaro Videla como primer ponente de esta primera entrega de Papers We Love Madrid.</p> <p>\n\n\n<b>Intro</b></p> <p>\n\nEn cuanto Álvaro me pase un pequeño resumen, actualizaré esta sección.</p> <p>\n\n<b>Biografía</b></p> <p>\n\nÁlvaro (<a href=\"https://twitter.com/old_sound\">@old_sound</a>) trabaja como Developer Advocate para RabbitMQ/Pivotal y es coautor del libro  <a href=\"http://www.manning.com/videla/\">RabbitMQ in Action</a></p> <p>\n\n<b><br/></b></p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/a/d/2/0/600_434264320.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/a/d/2/1/600_434264321.jpeg","height":null,"width":null},{"url":"https://secure.meetupstatic.com/photos/event/a/d/2/2/600_434264322.jpeg","height":null,"width":null}],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":3600000,"time":1423764000000,"title":"#1 - Álvaro Videla: Premature optimization is the root of all evil"},"239309072":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/239309072/","description":"<p><b>Important</b></p> <p>A 10 min intro for absolute beginners will be provided. The idea is that anyone with basic knowledge in algebra, geometry and programming will be able to follow this session</p> <p><b>The challenge</b></p> <p>40 pages and a ton of Maths</p> <p><b>The goal</b></p> <p>This paper starts with basic Geometry that most people should be able to follow. I plan to explore the development of these concepts inside the Mathematical world and then show the applications for several areas in computer science, focusing on Lambda Calculus and types.</p> ","photos":[],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":7200000,"time":1493312400000,"title":"The Historical Development of Algebraic Geometry"},"229616859":{"url":"https://www.meetup.com/Papers-We-Love-Madrid/events/229616859/","description":"<p>While I was working on the presentation for Plumtree I realized that the gossip introduction is itself quite long, so I'm going to split the talk in two. In this first one  I will introduce Gossip protocols and I will go over these papers:  </p> <p>•  A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry. “Epidemic Algorithms for Replicated Database Maintenance.” In Proc. Sixth Symp. on Principles of Distributed Computing, pp. 1–12, Aug. 1987. ACM. Ken Birman. The Promise, and Limitations, of Gossip Protocols. SIGOPS Oper. Syst. Rev., 41(5):8–13, October 2007</p> <p>• Gossip-based Protocols for Large-scale Distributed Systems. Márk Jelasity, 2013JELASITY, M., GUERRAOUI, R., KERMARREC, A.-M., AND VAN STEEN, M. 2004. The peer sampling service: Experimental evaluation of unstructured gossip-based implementations. In Middleware 2004, H.-A. Jacobsen, Ed. Lecture Notes in Computer Science, vol. 3231. Springer-Verlag, 79–98.</p> <p>Although some parts of the presentation refer to these:</p> <p>• J. Leitão, J. Pereira, and L. Rodrigues. Epidemic broadcast trees. In Huai, J. and Baldoni, R. and Yen, I., editor, IEEE International Symposium On Reliable Distributed Systems, pages 301–310. IEEE Computer Society, 2007Ali Saidi and Mojdeh Mohtashemi. Minimum-cost first-push-then-pull gossip algorithm. IEEE Wireless Communications and Networking Conference, WCNC, pages 2554–2559, 2012</p> <p>• JELASITY, M., GUERRAOUI, R., KERMARREC, A.-M., AND VAN STEEN, M. 2004. The peer sampling service: Experimental evaluation of unstructured gossip-based implementations. In Middleware 2004, H.-A. Jacobsen, Ed. Lecture Notes in Computer Science, vol. 3231. Springer-Verlag, 79–98.</p> <p><a href=\"http://status.aws.amazon.com/s3-20080720.html\">• <a href=\"http://status.aws.amazon.com/s3-20080720.html\" class=\"linkified\">http://status.aws.amazon.com/s3-20080720.html</a></a></p> <p>• <a href=\"http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archGossipAbout.html\"><a href=\"http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archGossipAbout.html\" class=\"linkified\">http://docs.datastax.com/en/cassandra/3.0/cassandra/architecture/archGossipAbout.html</a></a></p> <p><a href=\"https://www.consul.io/docs/internals/gossip.html\">• <a href=\"https://www.consul.io/docs/internals/gossip.html\" class=\"linkified\">https://www.consul.io/docs/internals/gossip.html</a></a></p> <p>• A Gossip-Style Failure Detection Service: Robbert van Renesse, Yaron Minsky, and Mark Hayden*; Dept. of Computer Science, Cornell University; 4118 Upson Hall, Ithaca, NY 14853</p> <p>• Gupta, Indranil, Chandra, Tushar D., and Goldszmidt, Germ´an S. On scalable and efficient distributed failure detectors. In Proceedings of the Twentieth Annual ACM Symposium on Principles of Distributed Computing, PODC ’01, pp. 170–179,New York, NY, USA, 2001. ACM. ISBN[masked]-9. doi:[masked]/383962.384010. URL <a href=\"http://doi.acm.org/10.1145/383962.384010\"><a href=\"http://doi.acm.org/10.1145/383962.384010\" class=\"linkified\">http://doi.acm.org/10.1145/383962.384010</a></a></p> <p>• Montresor, A.: Intelligent Gossip. In: Studies on Computational Inteligence, Intelligent Distributed Computing, Systems and Applications, Springer, Heidelberg (2008)</p> <p>• On disseminating information reliably without broadcasting. Proceedings of the International Conference on Distributed Computing Systems (1987), pp. 74–81</p> <p>• Brenda Baker and Robert Shostak. Gossips and telephones. Discrete Mathematics, 2(3):191–193, June 1972.<a href=\"http://www.inf.u-szeged.hu/~jelasity/ddm/gossip.pdf\"><a href=\"http://www.inf.u-szeged.hu/~jelasity/ddm/gossip.pdf\" class=\"linkified\">http://www.inf.u-szeged.hu/~jelasity/ddm/gossip.pdf</a></a></p> <p>• We will talk about the paper \"Epidemic Broadcast Trees\" by J. Leitão, J. Pereira, and L. Rodrigues. . </p> <p>• This paper proposes an integrated broadcast scheme that combines both Gossip protocols and deterministic tree-based protocols. The paper proposes a new protocol \"Plumtree\", a derivative of which is now used by Riak for gossiping bucket properties.</p> <p>• We'll also give a brief introduction to Gossip protocols, through these papers:</p> <p>• A. Demers, D. Greene, C. Hauser, W. Irish, J. Larson, S. Shenker, H. Sturgis, D. Swinehart, and D. Terry. “Epidemic Algorithms for Replicated Database Maintenance.” In Proc. Sixth Symp. on Principles of Distributed Computing, pp. 1–12, Aug. 1987. ACM.</p> <p>• Ken Birman. The Promise, and Limitations, of Gossip Protocols. SIGOPS Oper. Syst. Rev., 41(5):8–13, October 2007</p> ","photos":[],"venue":{"lat":40.405967712402344,"address1":"Ronda de Atocha, 37 Oficina Derecha 28012","address2":null,"name":"Oficinas de ShuttleCloud","postalCode":null,"lon":-3.6991889476776123,"country":"es","city":"Madrid"},"utcOffset":7200000,"time":1459962000000,"title":"Epidemic Broadcast Trees"}}