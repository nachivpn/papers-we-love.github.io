{"217295142":{"url":"https://www.meetup.com/Papers-We-Love-Hamburg/events/217295142/","description":"<p>Together with Lutz Huehnken we will discuss the paper \"Life beyond Distributed Transactions\". It is available <a href=\"https://github.com/papers-we-love/papers-we-love/blob/master/distributed_systems/life-beyoud-distributed-transactions-an-apostates-opinion.pdf?raw=true\">here</a> or at the Papers we love repository under \"Distributed Systems\". </p> <p>Participants are expected to have read the paper beforehand, you are not expected to have understood all the details - that's what our discussions are for. </p> <p>The paper is interesting for people, you want to write scalable information systems and is part of the recommended \"reads\" of the Akka team. </p> ","photos":[{"url":"https://secure.meetupstatic.com/photos/event/7/0/5/9/600_433948761.jpeg","height":null,"width":null}],"venue":{"lat":53.56086730957031,"address1":"Schulterblatt 36, 2.Stock","address2":null,"name":"inoio GmbH","postalCode":null,"lon":9.963171005249023,"country":"de","city":"Hamburg"},"utcOffset":3600000,"time":1422554400000,"title":"Life beyond Distributed Transactions"},"220890204":{"url":"https://www.meetup.com/Papers-We-Love-Hamburg/events/220890204/","description":"<p><b>The Essence of the Iterator pattern </b>treats iterating over collections as two problems, which exhibit traversal of collections (and modifying the content) and accumulating values based on the contents.  Jeremy Gibbons and Bruno C.d.S. Oliveira show how <b>Applicative Functors</b> and related type classes can be used in functional programming to solve these problems.</p> <p>Paper: <a href=\"http://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf\"><a href=\"http://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf\" class=\"linkified\">http://www.cs.ox.ac.uk/jeremy.gibbons/publications/iterator.pdf</a></a></p> <p>The paper is widely quoted amongst the functional programming community and illustrates nicely how recent acadamic research (Applicative Functors, McBride, 2008) finds its way into language design and application of functional programming languages such as Scala or Haskell.</p> ","photos":[],"venue":{"lat":53.56086730957031,"address1":"Schulterblatt 36, 2.Stock","address2":null,"name":"inoio GmbH","postalCode":null,"lon":9.963171005249023,"country":"de","city":"Hamburg"},"utcOffset":7200000,"time":1429203600000,"title":"The Essence of the Iterator pattern"},"212632542":{"url":"https://www.meetup.com/Papers-We-Love-Hamburg/events/212632542/","description":"<p>Stackless Scala with Free Monads is a fairly easy to read paper with many practical applications. It introduces trampolines as a means to avoid stackoverflow errors on programming languages of the JVM and generalizes them into the Free Monad, a structure which can help writing monadic expressions for any type constructor if a functor is defined. Free monads can be useful in tackling the expression problem which is part of another paper.</p> <p>The paper can be found here:</p> <p><a href=\"http://blog.higher-order.com/assets/trampolines.pdf\"><a href=\"http://blog.higher-order.com/assets/trampolines.pdf\" class=\"linkified\">http://blog.higher-order.com/assets/trampolines.pdf</a></a></p> <p><br/>and you are expected to have at least tried to read it when coming to the meetup so that we can efficiently discuss it.</p> ","photos":[],"venue":{"lat":53.56086730957031,"address1":"Schulterblatt 36, 2.Stock","address2":null,"name":"inoio GmbH","postalCode":null,"lon":9.963171005249023,"country":"de","city":"Hamburg"},"utcOffset":3600000,"time":1414692000000,"title":"Stackless Scala with Free Monads"}}